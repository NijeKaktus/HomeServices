
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password: 'password',
  name: 'name',
  phone: 'phone',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  address: 'address',
  city: 'city'
};

exports.Prisma.ServiceProviderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  bio: 'bio',
  experience: 'experience',
  rating: 'rating',
  totalReviews: 'totalReviews',
  isVerified: 'isVerified'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  permissions: 'permissions'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  icon: 'icon',
  isActive: 'isActive'
};

exports.Prisma.ServiceScalarFieldEnum = {
  id: 'id',
  categoryId: 'categoryId',
  name: 'name',
  description: 'description',
  isActive: 'isActive'
};

exports.Prisma.ServiceProviderCategoryScalarFieldEnum = {
  id: 'id',
  serviceProviderId: 'serviceProviderId',
  categoryId: 'categoryId'
};

exports.Prisma.CoverageAreaScalarFieldEnum = {
  id: 'id',
  serviceProviderId: 'serviceProviderId',
  city: 'city'
};

exports.Prisma.PortfolioItemScalarFieldEnum = {
  id: 'id',
  serviceProviderId: 'serviceProviderId',
  title: 'title',
  description: 'description',
  imageUrl: 'imageUrl',
  categoryId: 'categoryId',
  createdAt: 'createdAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  serviceProviderId: 'serviceProviderId',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  providerId: 'providerId',
  lastMessage: 'lastMessage',
  lastMessageAt: 'lastMessageAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  senderId: 'senderId',
  content: 'content',
  isRead: 'isRead',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  username: 'username',
  email: 'email',
  password: 'password',
  name: 'name',
  phone: 'phone'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.CustomerOrderByRelevanceFieldEnum = {
  address: 'address',
  city: 'city'
};

exports.Prisma.ServiceProviderOrderByRelevanceFieldEnum = {
  bio: 'bio'
};

exports.Prisma.AdminOrderByRelevanceFieldEnum = {
  permissions: 'permissions'
};

exports.Prisma.CategoryOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description',
  icon: 'icon'
};

exports.Prisma.ServiceOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.CoverageAreaOrderByRelevanceFieldEnum = {
  city: 'city'
};

exports.Prisma.PortfolioItemOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  imageUrl: 'imageUrl'
};

exports.Prisma.ReviewOrderByRelevanceFieldEnum = {
  comment: 'comment'
};

exports.Prisma.ConversationOrderByRelevanceFieldEnum = {
  lastMessage: 'lastMessage'
};

exports.Prisma.MessageOrderByRelevanceFieldEnum = {
  content: 'content'
};
exports.UserRole = exports.$Enums.UserRole = {
  CUSTOMER: 'CUSTOMER',
  SERVICE_PROVIDER: 'SERVICE_PROVIDER',
  ADMIN: 'ADMIN'
};

exports.Prisma.ModelName = {
  User: 'User',
  Customer: 'Customer',
  ServiceProvider: 'ServiceProvider',
  Admin: 'Admin',
  Category: 'Category',
  Service: 'Service',
  ServiceProviderCategory: 'ServiceProviderCategory',
  CoverageArea: 'CoverageArea',
  PortfolioItem: 'PortfolioItem',
  Review: 'Review',
  Conversation: 'Conversation',
  Message: 'Message'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\milosd\\OneDrive - Comtrade Group\\Desktop\\Milos\\Faks\\PIVT\\Home Services\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\milosd\\OneDrive - Comtrade Group\\Desktop\\Milos\\Faks\\PIVT\\Home Services\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum UserRole {\n  CUSTOMER\n  SERVICE_PROVIDER\n  ADMIN\n}\n\nmodel User {\n  id        Int      @id @default(autoincrement())\n  username  String   @unique\n  email     String   @unique\n  password  String\n  name      String\n  phone     String\n  role      UserRole\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  customer        Customer?\n  serviceProvider ServiceProvider?\n  admin           Admin?\n  sentMessages    Message[]\n\n  @@map(\"users\")\n}\n\nmodel Customer {\n  id      Int     @id @default(autoincrement())\n  userId  Int     @unique\n  address String?\n  city    String?\n\n  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n  reviews       Review[]\n  conversations Conversation[]\n\n  @@map(\"customers\")\n}\n\nmodel ServiceProvider {\n  id           Int     @id @default(autoincrement())\n  userId       Int     @unique\n  bio          String?\n  experience   Int     @default(0)\n  rating       Float   @default(0)\n  totalReviews Int     @default(0)\n  isVerified   Boolean @default(false)\n\n  user          User                      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  categories    ServiceProviderCategory[]\n  coverageAreas CoverageArea[]\n  portfolio     PortfolioItem[]\n  reviews       Review[]\n  conversations Conversation[]\n\n  @@map(\"service_providers\")\n}\n\nmodel Admin {\n  id          Int    @id @default(autoincrement())\n  userId      Int    @unique\n  permissions String\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"admins\")\n}\n\nmodel Category {\n  id          Int     @id @default(autoincrement())\n  name        String  @unique\n  description String\n  icon        String?\n  isActive    Boolean @default(true)\n\n  services         Service[]\n  serviceProviders ServiceProviderCategory[]\n\n  @@map(\"categories\")\n}\n\nmodel Service {\n  id          Int     @id @default(autoincrement())\n  categoryId  Int\n  name        String\n  description String\n  isActive    Boolean @default(true)\n\n  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)\n\n  @@map(\"services\")\n}\n\nmodel ServiceProviderCategory {\n  id                Int @id @default(autoincrement())\n  serviceProviderId Int\n  categoryId        Int\n\n  serviceProvider ServiceProvider @relation(fields: [serviceProviderId], references: [id], onDelete: Cascade)\n  category        Category        @relation(fields: [categoryId], references: [id], onDelete: Cascade)\n\n  @@unique([serviceProviderId, categoryId])\n  @@map(\"service_provider_categories\")\n}\n\nmodel CoverageArea {\n  id                Int    @id @default(autoincrement())\n  serviceProviderId Int\n  city              String\n\n  serviceProvider ServiceProvider @relation(fields: [serviceProviderId], references: [id], onDelete: Cascade)\n\n  @@map(\"coverage_areas\")\n}\n\nmodel PortfolioItem {\n  id                Int      @id @default(autoincrement())\n  serviceProviderId Int\n  title             String\n  description       String\n  imageUrl          String\n  categoryId        Int?\n  createdAt         DateTime @default(now())\n\n  serviceProvider ServiceProvider @relation(fields: [serviceProviderId], references: [id], onDelete: Cascade)\n\n  @@map(\"portfolio_items\")\n}\n\nmodel Review {\n  id                Int      @id @default(autoincrement())\n  customerId        Int\n  serviceProviderId Int\n  rating            Int\n  comment           String?\n  createdAt         DateTime @default(now())\n\n  customer        Customer        @relation(fields: [customerId], references: [id])\n  serviceProvider ServiceProvider @relation(fields: [serviceProviderId], references: [id])\n\n  @@map(\"reviews\")\n}\n\nmodel Conversation {\n  id            Int      @id @default(autoincrement())\n  customerId    Int\n  providerId    Int\n  lastMessage   String?\n  lastMessageAt DateTime @default(now())\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  customer Customer        @relation(fields: [customerId], references: [id], onDelete: Cascade)\n  provider ServiceProvider @relation(fields: [providerId], references: [id], onDelete: Cascade)\n  messages Message[]\n\n  @@unique([customerId, providerId])\n  @@map(\"conversations\")\n}\n\nmodel Message {\n  id             Int      @id @default(autoincrement())\n  conversationId Int\n  senderId       Int\n  content        String\n  isRead         Boolean  @default(false)\n  createdAt      DateTime @default(now())\n\n  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n  sender       User         @relation(fields: [senderId], references: [id], onDelete: Cascade)\n\n  @@map(\"messages\")\n}\n",
  "inlineSchemaHash": "1a3bcaeb0095079e3dc2d8ab8879689fe0935404973ac737bfa41a0749bafcd2",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToUser\"},{\"name\":\"serviceProvider\",\"kind\":\"object\",\"type\":\"ServiceProvider\",\"relationName\":\"ServiceProviderToUser\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToUser\"},{\"name\":\"sentMessages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToUser\"}],\"dbName\":\"users\"},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CustomerToUser\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"CustomerToReview\"},{\"name\":\"conversations\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToCustomer\"}],\"dbName\":\"customers\"},\"ServiceProvider\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"experience\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalReviews\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ServiceProviderToUser\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"ServiceProviderCategory\",\"relationName\":\"ServiceProviderToServiceProviderCategory\"},{\"name\":\"coverageAreas\",\"kind\":\"object\",\"type\":\"CoverageArea\",\"relationName\":\"CoverageAreaToServiceProvider\"},{\"name\":\"portfolio\",\"kind\":\"object\",\"type\":\"PortfolioItem\",\"relationName\":\"PortfolioItemToServiceProvider\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToServiceProvider\"},{\"name\":\"conversations\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToServiceProvider\"}],\"dbName\":\"service_providers\"},\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminToUser\"}],\"dbName\":\"admins\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"services\",\"kind\":\"object\",\"type\":\"Service\",\"relationName\":\"CategoryToService\"},{\"name\":\"serviceProviders\",\"kind\":\"object\",\"type\":\"ServiceProviderCategory\",\"relationName\":\"CategoryToServiceProviderCategory\"}],\"dbName\":\"categories\"},\"Service\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToService\"}],\"dbName\":\"services\"},\"ServiceProviderCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceProviderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceProvider\",\"kind\":\"object\",\"type\":\"ServiceProvider\",\"relationName\":\"ServiceProviderToServiceProviderCategory\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToServiceProviderCategory\"}],\"dbName\":\"service_provider_categories\"},\"CoverageArea\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceProviderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serviceProvider\",\"kind\":\"object\",\"type\":\"ServiceProvider\",\"relationName\":\"CoverageAreaToServiceProvider\"}],\"dbName\":\"coverage_areas\"},\"PortfolioItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceProviderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"serviceProvider\",\"kind\":\"object\",\"type\":\"ServiceProvider\",\"relationName\":\"PortfolioItemToServiceProvider\"}],\"dbName\":\"portfolio_items\"},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"serviceProviderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToReview\"},{\"name\":\"serviceProvider\",\"kind\":\"object\",\"type\":\"ServiceProvider\",\"relationName\":\"ReviewToServiceProvider\"}],\"dbName\":\"reviews\"},\"Conversation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastMessageAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"ConversationToCustomer\"},{\"name\":\"provider\",\"kind\":\"object\",\"type\":\"ServiceProvider\",\"relationName\":\"ConversationToServiceProvider\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ConversationToMessage\"}],\"dbName\":\"conversations\"},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToMessage\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageToUser\"}],\"dbName\":\"messages\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

